ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM")
endif

recurse = $(shell find $2 -type $1 -name '$3' 2> /dev/null)

CFILES := $(foreach dir,$(SOURCES),$(call recurse,f,$(dir),*.c))
CPPFILES := $(foreach dir,$(SOURCES),$(call recurse,f,$(dir),*.cpp))
SFILES := $(foreach dir,$(SOURCES),$(call recurse,f,$(dir),*.S))
OBJS := $(addprefix $(BUILD_DIR)/,$(CFILES:.c=.o)) $(addprefix $(BUILD_DIR)/,$(CPPFILES:.cpp=.o)) $(addprefix $(BUILD_DIR)/,$(SFILES:.S=.o))
INCLUDE := $(INCLUDES) $(foreach dir,$(LIBRARIES),-I$(dir)/include)
LIBS := $(foreach dir,$(LIBRARIES),-L$(dir)/lib) $(foreach dir,$(LIBRARIES),-l$(notdir $(dir)))

DEVKITARM_BIN := $(DEVKITARM)/bin
PREFIX := $(DEVKITARM_BIN)/arm-none-eabi-
CC := $(PREFIX)gcc
CPP := $(PREFIX)g++
OBJCOPY := $(PREFIX)objcopy
ifeq ($(strip $(CPPFILES)),)
    export LD := $(CC)
else
    export LD := $(CXX)
endif

ARCH := -mthumb -mthumb-interwork -march=armv5te -mtune=arm946e-s
BASE_FLAGS := $(BUILD_FLAGS) $(ARCH) -I$(INCLUDE)
CFLAGS := $(BASE_FLAGS) -std=gnu99
CPPFLAGS := $(BASE_FLAGS) -fno-rtti -fno-exceptions -std=gnu++11
SFLAGS := $(ARCH)
LDFLAGS := -specs=$(DEVKITPRO)/ctr9/tools/ctr9.specs

all: $(OUTPUT_DIR)/arm9.bin

clean:
	@rm -rf $(BUILD_DIR) $(OUTPUT_DIR)
	@echo "Cleaned!"

$(BUILD_DIR):
	@mkdir -p $@

$(BUILD_DIR)/$(SOURCES):
	@mkdir -p $@

$(OUTPUT_DIR):
	@mkdir -p $@

$(OUTPUT_DIR)/arm9.bin: $(BUILD_DIR)/arm9.elf $(OUTPUT_DIR)
	@echo $@
	@$(OBJCOPY) -S -O binary $< $@

$(BUILD_DIR)/arm9.elf: $(OBJS) $(BUILD_DIR)
	@echo $@
	@$(LD) $(LDFLAGS) $(OBJS) $(LIBS) -o $@

$(BUILD_DIR)/%.o: %.c $(BUILD_DIR)/$(SOURCES)
	@echo $@
	@$(CC) $(CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: %.cpp $(BUILD_DIR)/$(SOURCES)
	@echo $@
	@$(CPP) $(CPPFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: %.S $(BUILD_DIR)/$(SOURCES)
	@echo $@
	@$(CC) $(SFLAGS) -c $< -o $@